/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kashiki.view.panels;

import com.kashiki.components.table.ActionEditor;
import com.kashiki.components.table.ActionRenderer;
import com.kashiki.controller.ServicoFilme;
import com.kashiki.controller.ServicoReserva;
import com.kashiki.model.Filme;
import com.kashiki.model.Reserva;
import com.kashiki.util.NotificacaoPopup;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kashiki
 */
public class ReservaPanel extends javax.swing.JPanel implements PropertyChangeListener {

    private final NotificacaoPopup popup;
    private final ServicoFilme servicoFilme;
    private final ServicoReserva servicoReserva;
    private final DefaultTableModel tableModel;
    private final ActionEditor actionEditor;

    /**
     * Creates new form Filme
     *
     * @param servicoFilme
     */
    public ReservaPanel(ServicoFilme servicoFilme) {
        this.actionEditor = new ActionEditor();
        this.actionEditor.addPropertyChangeListener(this);

        initComponents();

        tableModel = (DefaultTableModel) this.tableReservas.getModel();

        this.servicoFilme = servicoFilme;
        this.servicoFilme.addPropertyChangeListener(this);

        this.servicoReserva = new ServicoReserva(servicoFilme);

        this.popup = new NotificacaoPopup();

        this.onLoadComboBoxFilme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanel = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReservas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearchBoxClientName = new javax.swing.JTextField();
        btnSearchReserva = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbFilmes = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtQtdBilhetes = new javax.swing.JSpinner();
        btnCriarReserva = new javax.swing.JButton();
        txtIdReserva = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnUpdateReserva = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtTotalReservasStatus = new javax.swing.JLabel();

        setBackground(new java.awt.Color(45, 45, 45));
        setPreferredSize(new java.awt.Dimension(1010, 490));

        tabPanel.setBackground(new java.awt.Color(45, 45, 45));
        tabPanel.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(45, 45, 45));

        tableReservas.setBackground(new java.awt.Color(248, 249, 250));
        tableReservas.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tableReservas.setForeground(new java.awt.Color(0, 0, 0));
        tableReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cliente", "Filme", "Bilhetes", "Ações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableReservas.setRowHeight(40);

        tableReservas.getTableHeader().setBackground(new Color(248, 249, 250));
        jScrollPane1.setViewportView(tableReservas);
        tableReservas.getColumnModel().getColumn(4).setCellRenderer(new ActionRenderer());
        tableReservas.getColumnModel().getColumn(4).setCellEditor(actionEditor);

        tableReservas.getColumnModel().getColumn(0).setPreferredWidth(1);
        tableReservas.getColumnModel().getColumn(4).setPreferredWidth(50);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome do cliente:");

        txtSearchBoxClientName.setBackground(new java.awt.Color(60, 60, 60));
        txtSearchBoxClientName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        txtSearchBoxClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchReservaActionPerformed(evt);
            }
        });

        btnSearchReserva.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        btnSearchReserva.setText("Pesquisar");
        btnSearchReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchBoxClientName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchReserva)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSearchBoxClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSearchReserva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tabPanel.addTab("Lista de reservas", jPanel2);

        jPanel1.setBackground(new java.awt.Color(45, 45, 45));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Id:");

        txtNomeCliente.setBackground(new java.awt.Color(60, 60, 60));
        txtNomeCliente.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        txtNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Selecionar filme:");

        cmbFilmes.setBackground(new java.awt.Color(60, 60, 60));
        cmbFilmes.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantidade de bilhetes");

        txtQtdBilhetes.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtQtdBilhetes.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnCriarReserva.setText("Criar reserva");
        btnCriarReserva.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCriarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarReservaActionPerformed(evt);
            }
        });

        txtIdReserva.setBackground(new java.awt.Color(60, 60, 60));
        txtIdReserva.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtIdReserva.setForeground(new java.awt.Color(255, 255, 255));
        txtIdReserva.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        txtIdReserva.setCaretColor(new java.awt.Color(60, 60, 60));
        txtIdReserva.setDisabledTextColor(new java.awt.Color(60, 60, 60));
        txtIdReserva.setEnabled(false);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nome do cliente:");

        btnUpdateReserva.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnUpdateReserva.setText("Atualizar");
        btnUpdateReserva.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateReservaActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnReset.setText("Restaurar");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCriarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtQtdBilhetes, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cmbFilmes, javax.swing.GroupLayout.Alignment.LEADING, 0, 954, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQtdBilhetes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCriarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdateReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
        );

        tabPanel.addTab("Criar / Editar reserva", jPanel1);

        txtTotalReservasStatus.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtTotalReservasStatus.setForeground(new java.awt.Color(255, 255, 255));
        txtTotalReservasStatus.setText("Total de reservas criadas: 0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(txtTotalReservasStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(596, 596, 596))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(txtTotalReservasStatus)
                .addContainerGap(400, Short.MAX_VALUE))
        );

        tabPanel.addTab("Status", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarReservaActionPerformed
        String nomeCliente = this.txtNomeCliente.getText().trim();
        Filme filme = (Filme) this.cmbFilmes.getSelectedItem();

        if (filme == null) {
            popup.showMessage("Erro", "Filme inválido!", JOptionPane.ERROR_MESSAGE);
        }

        int filmeId = filme.getId();
        int qtdBilhetes = (int) this.txtQtdBilhetes.getValue();

        Boolean isSuccess = this.servicoReserva.Cadastrar(nomeCliente, filmeId, qtdBilhetes);

        if (isSuccess) {
            popup.showMessage("Sucesso", "Reserva criada com sucesso!", JOptionPane.INFORMATION_MESSAGE);

            this.btnResetActionPerformed(null);

            this.onLoadTable();
            SwingUtilities.invokeLater(this::initStatus);

        } else {
            popup.showMessage("Erro", "Reserva não criada!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnCriarReservaActionPerformed

    private void btnSearchReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchReservaActionPerformed
        String clientName = txtSearchBoxClientName.getText().trim();

        if (clientName.isEmpty()) {
            this.onLoadTable();
            return;
        }

        List<Reserva> reservas = this.servicoReserva.Consultar(clientName);

        if (reservas.isEmpty()) {
            popup.showMessage("Erro", "Reserva não encontrada!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        tableModel.setRowCount(0);

        reservas.forEach(reserva -> tableModel.addRow(reserva.toRowTable()));
    }//GEN-LAST:event_btnSearchReservaActionPerformed

    private void btnUpdateReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateReservaActionPerformed
        String idText = txtIdReserva.getText().trim();

        if (idText.isBlank()) {
            popup.showMessage("Erro", "Id inválido", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int id = Integer.parseInt(idText);

        Filme filme = (Filme) this.cmbFilmes.getSelectedItem();
        int qtdBilhetes = (int) this.txtQtdBilhetes.getValue();
        String nomeCliente = this.txtNomeCliente.getText().trim();

        if (filme == null) {
            popup.showMessage("Erro", "Filme inválido!", JOptionPane.ERROR_MESSAGE);
        }

        int filmeId = filme.getId();

        Boolean isSuccess = this.servicoReserva.Atualizar(id, nomeCliente, filmeId, qtdBilhetes);

        if (isSuccess) {
            this.onLoadTable();
            SwingUtilities.invokeLater(this::initStatus);

            popup.showMessage("Sucesso", "Reserva atualizada com sucesso!", JOptionPane.INFORMATION_MESSAGE);
        } else {
            popup.showMessage("Erro", "Reserva não atualizada!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateReservaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.txtIdReserva.setText("");
        this.txtNomeCliente.setText("");
        this.txtQtdBilhetes.setValue(0);
        this.cmbFilmes.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void onLoadComboBoxFilme() {
        this.cmbFilmes.removeAllItems();
        this.servicoFilme.Listar().forEach(f -> this.cmbFilmes.addItem(f));
    }

    private void onLoadTable() {
        tableModel.setRowCount(0);

        this.servicoReserva.Listar().forEach(r -> tableModel.addRow(r.toRowTable()));
    }

    private void onDeleteMovie() {
        int indexSelected = this.tableReservas.getSelectedRow();

        int id = (int) this.tableModel.getValueAt(indexSelected, 0);

        Boolean isSuccess = this.servicoReserva.Remover(id);

        if (isSuccess) {
            this.onLoadTable();
            SwingUtilities.invokeLater(this::initStatus);

            this.popup.showMessage("Sucesso", "Reserva removida com sucesso!", JOptionPane.INFORMATION_MESSAGE);
        } else {
            this.popup.showMessage("Erro", "Reserva não removida!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void onLoadDataForEdit() {
        int indexSelected = this.tableReservas.getSelectedRow();
        String nomeCliente = (String) this.tableModel.getValueAt(indexSelected, 1);
        String nomeFilme = (String) this.tableModel.getValueAt(indexSelected, 2);
        int id = Integer.parseInt(this.tableModel.getValueAt(indexSelected, 0).toString());
        int qtdBilhetes = Integer.parseInt(this.tableModel.getValueAt(indexSelected, 3).toString());

        Filme filme = this.servicoFilme.Consultar(nomeFilme).get(0);

        this.txtIdReserva.setText(id + "");
        this.cmbFilmes.setSelectedItem(filme);
        this.txtNomeCliente.setText(nomeCliente);
        this.txtQtdBilhetes.setValue(qtdBilhetes);
    }

    private void initStatus() {
        List<Reserva> reservas = this.servicoReserva.Listar();
        int totalReservas = reservas.size();

        this.txtTotalReservasStatus.setText("Total de reservas criadas: " + totalReservas);
        
        

        Filme movie = this.getMostRequestedMovie(reservas);

    }

    private Filme getMostRequestedMovie(List<Reserva> reservas) {
        if (reservas == null || reservas.isEmpty()) {
            return null;
        }

        Map<Filme, Integer> contadorFilmes = new HashMap<>();

        for (Reserva reserva : reservas) {
            Filme filme = reserva.getFilme();
            if (filme != null) {
                contadorFilmes.put(filme, contadorFilmes.getOrDefault(filme, 0) + reserva.getQuantidade());
            }
        }

        Filme mostRequestedMovie = null;
        int maiorQuantidade = 0;

        for (Map.Entry<Filme, Integer> entrada : contadorFilmes.entrySet()) {
            if (entrada.getValue() > maiorQuantidade) {
                maiorQuantidade = entrada.getValue();
                mostRequestedMovie = entrada.getKey();
            }
        }

        return mostRequestedMovie;
    }

    @Override
    public void propertyChange(PropertyChangeEvent pce) {
        if (null != pce.getPropertyName()) {
            switch (pce.getPropertyName()) {
                case "edit" -> {
                    SwingUtilities.invokeLater(this::onLoadDataForEdit);
                    this.tabPanel.setSelectedIndex(1);
                }
                case "delete" -> {
                    SwingUtilities.invokeLater(this::onDeleteMovie);
                }
                case "filmes" -> {
                    SwingUtilities.invokeLater(this::onLoadComboBoxFilme);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCriarReserva;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearchReserva;
    private javax.swing.JButton btnUpdateReserva;
    private javax.swing.JComboBox<Filme> cmbFilmes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JTable tableReservas;
    private javax.swing.JTextField txtIdReserva;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JSpinner txtQtdBilhetes;
    private javax.swing.JTextField txtSearchBoxClientName;
    private javax.swing.JLabel txtTotalReservasStatus;
    // End of variables declaration//GEN-END:variables
}
